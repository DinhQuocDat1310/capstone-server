// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id                String        @id @default(uuid())
  password          String
  email             String?       @unique
  phoneNumber       String?       @unique
  fullname          String?
  address           String?
  isActive          Boolean       @default(true)
  role              Role
  status            UserStatus    @default(INIT)
  
  idCitizen         String?       @unique
  imageCitizenFront String?
  imageCitizenBack  String?

    
  brand        Brand?
  driver       Driver?
  manager      Manager?
}

enum Role {
  ADMIN
  DRIVER
  BRAND
  MANAGER
}

enum UserStatus {
  INIT
  NEW
  BANNED
  VERIFIED
}


model Brand {
  id                   String          @id @default(uuid())
  brandName            String          @unique
  logo                 String?

  idLicenseBusiness    String?         @unique
  ownerLicenseBusiness String?
  typeBusiness         String?
  imageLicenseBusiness String?
  
  verify               ManagerVerify[]
  user                 User            @relation(fields: [userId], references: [id])
  userId               String          @unique
}

model Driver {
  id            String @id @default(uuid())
  
  licensePlate  String?
  make          CarMake?
  color         CarColor?
  model         String?
  year          String?
  imageCarFront String?
  imageCarBack  String?

  idBank        String?       @unique
  ownerBank     String?
  nameBank      String?

  verify        ManagerVerify[]
  user          User   @relation(fields: [userId], references: [id])
  userId        String @unique
}

enum CarColor {
  White
  Black
  Silver_Gray
  Red
  Blue
  Brown_Beige
  Green
  Yellow_Gold
}

enum CarMake {         
  Toyota
  Kia
  Hyundai
  Mazda
  Ford
  Honda
  Mitsubishi
  Vinfast
  Mercedes
  Audi
}

model Manager {
  id          String        @id @default(uuid())
  user        User          @relation(fields: [userId], references: [id])
  userId      String        @unique
  verify      ManagerVerify[]
}

enum VerifyType {
  Campaign
  Brand
  Driver
  Payment
}

model ManagerVerify {
  id          String        @id @default(uuid())
  type        VerifyType
  status      VerifyStatus  @default(PENDING)
  detail      String?
  createDate  DateTime      @default(now())
  updateAt    DateTime      @updatedAt
  expiredDate DateTime
  createBy    RequestBy?      
  brand       Brand?        @relation(fields: [brandId], references: [id])
  brandId     String?
  driver      Driver?       @relation(fields: [driverId], references: [id])
  driverId    String?
  manager     Manager?      @relation(fields: [managerId], references: [id])
  managerId   String?
}

enum RequestBy {
  Admin
  System
}

enum VerifyStatus {
  ACCEPT
  BANNED
  REQUEST_TO_CHANGE
  PENDING
}
